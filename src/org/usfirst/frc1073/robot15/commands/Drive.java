// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1073.robot15.commands;

import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc1073.robot15.Robot;
import org.usfirst.frc1073.robot15.subsystems.DriveTrain;

/**
 *
 */
public class  Drive extends Command {

    public Drive() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	//
    	/* don't call move, instead add printouts to console of x y and z
    	 * figure out how to print to console
    	 * 
    	 */
    	float x = (float) Robot.oi.driverJoystick.getX();
    	float y = (float) Robot.oi.driverJoystick.getY();
    	float twist = (float) Robot.oi.driverJoystick.getTwist();
    	
    	System.out.println("The x value is:" + x);
    	System.out.println("The y value is:" + y);
    	System.out.println("The twist value is:" + twist);
    	//Robot.driveTrain.move(x, y, twist);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
