// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1073.robot15.subsystems;

import org.usfirst.frc1073.robot15.Robot;
import org.usfirst.frc1073.robot15.RobotMap;
import org.usfirst.frc1073.robot15.commands.*;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.DoubleSolenoid.Value;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class BinCollector extends Subsystem 
{
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    CANTalon binCollectorTalon = RobotMap.binCollectorbinCollectorTalon;
    Solenoid binCollectorSolenoid = RobotMap.binCollectorbinCollectorSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    private final double SPEED = 1.0; //May need to be changed
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    private boolean clawState;

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    // Method to lift the bin
    public void binLift() {
    	binCollectorTalon.set(-SPEED);
    }
    
    // Method to lower the bin
    public void binLower() {
    	binCollectorTalon.set(SPEED);
    }
    
    // Method to stop the bin motor
    public void binStop() {
    	binCollectorTalon.set(0.0);
    }
    
    // Returns the state
    public boolean getState() {
    	return clawState;
    }
    
    // Returns true if it is collecting
    public boolean isCollecting() {
    	if(binCollectorTalon.getSetpoint() > 0) {
    		return true;
    	}
    	return false;
    }
    
    // Returns true if it is lowering
    public boolean islowering() {
    	if(binCollectorTalon.getSetpoint() < 0) {
    		return true;
    	}
    	return false;
    }
    
    // Method to open the bin collector claw
    public void open() {
    	clawState = true;
    	binCollectorSolenoid.set(true);
    }
    
    // Method to close the bin collector claw
    public void close() {
    	clawState = false;
    	binCollectorSolenoid.set(false);
    }
    
	
}

